{"version":3,"sources":["webpack:///./src/templates/default.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Toolbar/Toolbar.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navigation/Navigation.js","webpack:///./src/components/Brand/Brand.js","webpack:///./src/components/Layout/Page/Page.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_Page_Page__WEBPACK_IMPORTED_MODULE_1__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","className","dangerouslySetInnerHTML","__html","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","Toolbar","styled","div","_templateObject","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","MenuItem","to","text","gatsby_link_default","activeClassName","SubmenuItem","_ref2","ul","Navigation_templateObject","node","NavigationMenu","gatsby_browser_entry_StaticQuery","menuLinks","map","item","submenu","Fragment","Navigation_MenuItem","key","path","subitem","Navigation_SubmenuItem","_2328520452","SiteTitle","h1","Brand_templateObject","Brand","_1072634222","Layout","Navigation_NavigationMenu","Date","getFullYear"],"mappings":"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","file":"component---src-templates-default-js-99e2b90c331573e379b2.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout/Page/Page\"\nimport SEO from \"../components/Seo/Seo\"\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <h1>{ frontmatter.title }</h1>\n      <div className=\"page-content\" dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import styled from 'styled-components'\n\nexport const Toolbar = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components'\nimport './Navigation.scss'\nimport { StaticQuery, Link } from 'gatsby'\n\nexport const MenuItem = ({ to, text, children }) => {\n    return (\n        <Link\n            to={ to }\n            className=\"menuItem\"\n            activeClassName=\"active\"\n        >\n            { text }\n            { children }\n        </Link>\n    )\n}\n\nexport const SubmenuItem = ({ to, text, children }) => {\n    return (\n        <Link\n            to={ to }\n            className=\"submenuItem\"\n            activeClassName=\"active\"\n         >\n            { text }\n            { children }\n        </Link>\n    )\n}\n\nexport const NavigationSubmenu = styled.ul`\n    position: absolute;\n    left: 0;\n    top: 100%;\n`\n\nMenuItem.propTypes = {\n    to: PropTypes.node.isRequired,\n    text: PropTypes.node.isRequired,\n}\n\nexport const NavigationMenu = () => (\n    <StaticQuery\n        query={\n            graphql`\n                query NavigationQuery {\n                    site {\n                        siteMetadata {\n                            menuLinks {\n                                text\n                                path\n                                submenu {\n                                    text\n                                    path\n                                }\n                            }\n                        }\n                    }\n                }`\n        }\n        render={\n            data => {\n                return (\n                    <nav className=\"menu\">\n                        {\n                            data.site.siteMetadata.menuLinks.map(\n                                item => {\n                                    if (item.submenu) {\n                                        return (\n                                            <>\n                                                <MenuItem key={ item.path } to={ item.path } text={ item.text } />\n                                                {\n                                                    item.submenu.map(\n                                                        subitem => <SubmenuItem key={ subitem.path } to={ subitem.path } text={ subitem.text } />\n                                                    )\n                                                }\n                                            </>\n                                        )\n                                    } else {\n                                        return <MenuItem key={ item.path } to={ item.path } text={ item.text } />\n                                    }\n                                }\n                            )\n                        }\n                    </nav>\n                )\n            }\n        }\n    />\n)\n\n// export const NavigationMenu = () => {\n//     return (\n//         <nav className=\"NavigationMenu\">\n//             <MenuItem to=\"/\" text=\"Home\" />\n//             <MenuItem to=\"/page-2\" text=\"Two\" />\n//         </nav>\n//     )\n// }\n\n","import React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nconst titleQuery = graphql`\n    query SiteTitleQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`\n\nconst SiteTitle = styled.h1`\n    color: #fff;\n    margin: 0;\n`\n\nexport default () => (\n    <StaticQuery\n        query={ titleQuery }\n        render={\n            data => (\n                <Link to=\"/\">\n                    <SiteTitle>{ data.site.siteMetadata.title }</SiteTitle>\n                </Link>\n            )\n        }\n    />\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Toolbar } from '../../Toolbar/Toolbar'\nimport { NavigationMenu } from '../../Navigation/Navigation'\nimport Brand from '../../Brand/Brand'\nimport \"./Page.scss\"\n\nconst Layout = ({ children }) => (\n    <div className=\"site\">\n        <div className=\"sidebar\">\n            <NavigationMenu />\n        </div>\n        <main>\n            <header>\n                <div className=\"container\">\n                    <Toolbar>\n                        <Brand />\n                    </Toolbar>\n                </div>\n            </header>\n            <div className=\"content\">\n                <div className=\"container\">\n                    { children }\n                </div>\n            </div>\n            <footer>\n                &copy; { new Date().getFullYear() } Data Translator\n            </footer>\n        </main>\n    </div>\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}