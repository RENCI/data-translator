{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Toolbar/Toolbar.js","webpack:///./src/components/Layout/MenuToggler/MenuToggler.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navigation/Navigation.js","webpack:///./src/components/Brand/Brand.js","webpack:///./src/hooks/useWindowWidth.js","webpack:///./src/components/Layout/Page/Page.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_Page_Page__WEBPACK_IMPORTED_MODULE_1__","_components_Seo_Seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_1429134173_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","metaKeywords","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","Toolbar","styled","div","_templateObject","MenuToggler","button","MenuToggler_templateObject","props","visible","open","bool","onClick","func","StaticQueryContext","createContext","StaticQuery","react_default","Consumer","staticQueryData","query","render","children","MenuItem","to","text","level","gatsby_link_default","className","activeClassName","style","paddingLeft","number","ul","Navigation_templateObject","NavigationMenu","gatsby_browser_entry_StaticQuery","menuLinks","map","item","submenu","react","key","path","Navigation_MenuItem","subitem","_2328520452","defaultWidth","SiteTitle","h1","Brand_templateObject","Brand","_1072634222","window","innerWidth","useWindowWidth","_useState","useState","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","Layout","windowWidth","sidebarCollapsed","setSidebarCollapsed","_useState2","sidebarOpen","setSidebarOpen","MenuToggler_MenuToggler","classnames","Navigation_NavigationMenu","Date","getFullYear","node"],"mappings":"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","file":"component---src-pages-404-js-975a493f1b910a28862f.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/Layout/Page/Page\"\nimport SEO from \"../components/Seo/Seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const metaKeywords = keywords || site.siteMetadata.keywords\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat({\n          name: `keywords`,\n          content: keywords || metaKeywords,\n        })\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  author: ``,\n}\n\nSEO.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  keywords: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default SEO\n","import styled from 'styled-components'\n\nexport const Toolbar = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n`","import styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst MenuToggler = styled.button`\n    display: ${ props => props.visible ? 'block' : 'none' };\n    background-color: var(--color-accent);\n    position: absolute;\n    cursor: pointer;\n    width: 3rem;\n    height: 3rem;\n    font-size: 300%;\n    line-height: 3rem;\n    border: none;\n    position: fixed;\n    right: 2rem;\n    bottom: 2rem;\n    border-radius: 50%;\n    z-index: 2;\n    overflow: hidden;\n    &::before, &::after {\n        transform: translateX(-50%);\n        transition: opacity 500ms, transform 250ms;\n        height: 6px;\n        width: 25px;\n        border-radius: 2px;\n        left: 50%;\n        opacity: 0.5;\n        content: '';\n        position: absolute;\n        background-color: #222;\n        transform-origin: 50% 50%;\n    }\n    &::before {\n        top: 18px;\n        ${\n            props => props.open\n                ? `opacity: 1; transform: rotate(45deg) translate(-5px, 13px);`\n                : `translateX(-9px) rotate(45deg)`\n        }\n    }\n    &::after {\n        bottom: 18px;\n        ${\n            props => props.open\n                ? `opacity: 1; transform: rotate(-45deg) translate(-5px, -13px);`\n                : `translateX(0px) rotate(45deg)`\n        }\n    }\n    &:hover {\n        &::before, &::after {\n            opacity: 1;\n        }\n    }\n`\n\nMenuToggler.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default MenuToggler\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport './Navigation.scss'\nimport { StaticQuery, Link } from 'gatsby'\n\nexport const MenuItem = ({ to, text, level, children }) => {\n    return (\n        <Link\n            to={ to }\n            className=\"menuItem\"\n            activeClassName=\"active\"\n            style={ level ? { paddingLeft: `calc(1rem + 10px * ${ level })` } : null }\n        >\n            { text }\n            { children }\n        </Link>\n    )\n}\n\nMenuItem.propTypes = {\n    to: PropTypes.string.isRequired, // location to which the link routes \n    text: PropTypes.string.isRequired, // text displayed for clicking\n    level: PropTypes.number, // indent amount\n}\n\nexport const NavigationSubmenu = styled.ul`\n    position: absolute;\n    left: 0;\n    top: 100%;\n`\n\nexport const NavigationMenu = () => (\n    <StaticQuery\n        query={\n            graphql`\n                query NavigationQuery {\n                    site {\n                        siteMetadata {\n                            menuLinks {\n                                text\n                                path\n                                submenu {\n                                    text\n                                    path\n                                }\n                            }\n                        }\n                    }\n                }`\n        }\n        render={\n            data => {\n                return (\n                    <nav className=\"menu\">\n                        {\n                            data.site.siteMetadata.menuLinks.map(\n                                item => {\n                                    if (item.submenu) {\n                                        return (\n                                            <Fragment key={ item.path }>\n                                                <MenuItem to={ item.path } text={ item.text } level={ 0 } />\n                                                {\n                                                    item.submenu.map(\n                                                        subitem => <MenuItem key={ subitem.path } to={ subitem.path } text={ subitem.text } level={ 1 }/>\n                                                    )\n                                                }\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return <MenuItem key={ item.path } to={ item.path } text={ item.text } />\n                                    }\n                                }\n                            )\n                        }\n                    </nav>\n                )\n            }\n        }\n    />\n)\n\n","import React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nconst titleQuery = graphql`\n    query SiteTitleQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`\n\nconst SiteTitle = styled.h1`\n    color: #fff;\n    margin: 0;\n`\n\nexport default () => (\n    <StaticQuery\n        query={ titleQuery }\n        render={\n            data => (\n                <Link to=\"/\">\n                    <SiteTitle>{ data.site.siteMetadata.title }</SiteTitle>\n                </Link>\n            )\n        }\n    />\n)\n","import { useState, useEffect } from 'react'\n\nlet defaultWidth\n\nif (typeof window !== `undefined`) {\n    defaultWidth = window.innerWidth\n}\n\nconst useWindowWidth = () => {\n    const [width, setWidth] = useState(defaultWidth)\n    \n    useEffect(() => {\n        const handleResize = () => setWidth(window.innerWidth)\n        window.addEventListener('resize', handleResize)\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n    \n    return width\n}\n\nexport default useWindowWidth","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport classnames from 'classnames'\nimport { Toolbar } from '../../Toolbar/Toolbar'\nimport MenuToggler from '../MenuToggler/MenuToggler'\nimport { NavigationMenu } from '../../Navigation/Navigation'\nimport Brand from '../../Brand/Brand'\nimport useWindowWidth from '../../../hooks/useWindowWidth'\nimport \"./Page.scss\"\n\nconst windowThreshold = 600\n\nconst Layout = ({ children }) => {\n    const windowWidth = useWindowWidth()\n    const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n\n    const handleSidebarToggle = () => {\n        setSidebarOpen(!sidebarOpen)\n    }\n\n    useEffect(() => {\n        if (windowWidth < windowThreshold) {\n            setSidebarCollapsed(true)\n        } else {\n            setSidebarCollapsed(false)\n        }\n    }, [windowWidth])\n\n    return (\n        <div className=\"site\">\n            <header>\n                <div className=\"container\">\n                    <Toolbar>\n                        <Brand />\n                    </Toolbar>\n                </div>\n            </header>\n            <main>\n                <MenuToggler open={ sidebarOpen } visible={ sidebarCollapsed } onClick={ handleSidebarToggle } />\n                <aside className={ classnames('sidebar', sidebarCollapsed ? 'collapsed' : null, sidebarOpen ? 'open' : null) }>\n                    <NavigationMenu />\n                </aside>\n                <div className=\"content\">\n                    <div className=\"container\">\n                        { children }\n                    </div>\n                </div>\n            </main>\n            <footer>\n                &copy; { new Date().getFullYear() } Data Translator\n            </footer>\n        </div>\n    )\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}