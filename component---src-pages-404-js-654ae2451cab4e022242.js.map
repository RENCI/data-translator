{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Toolbar/Toolbar.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navigation/Navigation.js","webpack:///./src/components/Brand/Brand.js","webpack:///./src/components/Layout/Page/Page.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_Page_Page__WEBPACK_IMPORTED_MODULE_1__","_components_Seo_Seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","Toolbar","styled","div","_templateObject","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","MenuItem","to","text","gatsby_link_default","className","activeClassName","SubmenuItem","_ref2","ul","Navigation_templateObject","node","NavigationMenu","gatsby_browser_entry_StaticQuery","menuLinks","map","item","submenu","Fragment","Navigation_MenuItem","key","path","subitem","Navigation_SubmenuItem","_2328520452","SiteTitle","h1","Brand_templateObject","Brand","_1072634222","Layout","Navigation_NavigationMenu","Date","getFullYear"],"mappings":"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","file":"component---src-pages-404-js-654ae2451cab4e022242.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/Layout/Page/Page\"\nimport SEO from \"../components/Seo/Seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import styled from 'styled-components'\n\nexport const Toolbar = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components'\nimport './Navigation.scss'\nimport { StaticQuery, Link } from 'gatsby'\n\nexport const MenuItem = ({ to, text, children }) => {\n    return (\n        <Link\n            to={ to }\n            className=\"menuItem\"\n            activeClassName=\"active\"\n        >\n            { text }\n            { children }\n        </Link>\n    )\n}\n\nexport const SubmenuItem = ({ to, text, children }) => {\n    return (\n        <Link\n            to={ to }\n            className=\"submenuItem\"\n            activeClassName=\"active\"\n         >\n            { text }\n            { children }\n        </Link>\n    )\n}\n\nexport const NavigationSubmenu = styled.ul`\n    position: absolute;\n    left: 0;\n    top: 100%;\n`\n\nMenuItem.propTypes = {\n    to: PropTypes.node.isRequired,\n    text: PropTypes.node.isRequired,\n}\n\nexport const NavigationMenu = () => (\n    <StaticQuery\n        query={\n            graphql`\n                query NavigationQuery {\n                    site {\n                        siteMetadata {\n                            menuLinks {\n                                text\n                                path\n                                submenu {\n                                    text\n                                    path\n                                }\n                            }\n                        }\n                    }\n                }`\n        }\n        render={\n            data => {\n                return (\n                    <nav className=\"menu\">\n                        {\n                            data.site.siteMetadata.menuLinks.map(\n                                item => {\n                                    if (item.submenu) {\n                                        return (\n                                            <>\n                                                <MenuItem key={ item.path } to={ item.path } text={ item.text } />\n                                                {\n                                                    item.submenu.map(\n                                                        subitem => <SubmenuItem key={ subitem.path } to={ subitem.path } text={ subitem.text } />\n                                                    )\n                                                }\n                                            </>\n                                        )\n                                    } else {\n                                        return <MenuItem key={ item.path } to={ item.path } text={ item.text } />\n                                    }\n                                }\n                            )\n                        }\n                    </nav>\n                )\n            }\n        }\n    />\n)\n\n// export const NavigationMenu = () => {\n//     return (\n//         <nav className=\"NavigationMenu\">\n//             <MenuItem to=\"/\" text=\"Home\" />\n//             <MenuItem to=\"/page-2\" text=\"Two\" />\n//         </nav>\n//     )\n// }\n\n","import React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nconst titleQuery = graphql`\n    query SiteTitleQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`\n\nconst SiteTitle = styled.h1`\n    color: #fff;\n    margin: 0;\n`\n\nexport default () => (\n    <StaticQuery\n        query={ titleQuery }\n        render={\n            data => (\n                <Link to=\"/\">\n                    <SiteTitle>{ data.site.siteMetadata.title }</SiteTitle>\n                </Link>\n            )\n        }\n    />\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Toolbar } from '../../Toolbar/Toolbar'\nimport { NavigationMenu } from '../../Navigation/Navigation'\nimport Brand from '../../Brand/Brand'\nimport \"./Page.scss\"\n\nconst Layout = ({ children }) => (\n    <div className=\"site\">\n        <div className=\"sidebar\">\n            <NavigationMenu />\n        </div>\n        <main>\n            <header>\n                <div className=\"container\">\n                    <Toolbar>\n                        <Brand />\n                    </Toolbar>\n                </div>\n            </header>\n            <div className=\"content\">\n                <div className=\"container\">\n                    { children }\n                </div>\n            </div>\n            <footer>\n                &copy; { new Date().getFullYear() } Data Translator\n            </footer>\n        </main>\n    </div>\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}